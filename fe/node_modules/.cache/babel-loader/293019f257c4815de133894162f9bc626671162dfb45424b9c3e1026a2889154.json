{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\macen\\\\OneDrive\\\\Documentos\\\\Repositorios\\\\find-jobs\\\\fe\\\\src\\\\Main\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Container, Input, Submit } from \"./styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    jobname: '',\n    jobcity: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Faça sua requisição à API aqui, utilizando formData\n\n    // Exemplo de requisição fetch\n    try {\n      const response = await fetch('sua/url/da/api', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        // Se a requisição for bem-sucedida, redirecione para a rota Result\n        navigate('/jobs');\n      } else {\n        // Trate os erros de requisição, se necessário\n        console.error('Erro ao enviar formulário');\n      }\n    } catch (error) {\n      console.error('Erro ao enviar formulário:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"POST\",\n      on: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"jobname\",\n        id: \"jobname\",\n        value: formData.jobname,\n        onChange: handleChange,\n        placeholder: \"Digite o Cargo ou Empresa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        name: \"jobcity\",\n        id: \"jobcity\",\n        placeholder: \"Insira a Cidade\",\n        value: formData.jobcity,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {\n        type: \"submit\",\n        value: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"ecRTpcpmr4et8KAORscs0OXjF/Y=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","Container","Input","Submit","useNavigate","jsxDEV","_jsxDEV","Main","_s","navigate","formData","setFormData","jobname","jobcity","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","error","children","on","type","id","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/macen/OneDrive/Documentos/Repositorios/find-jobs/fe/src/Main/index.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Container, Input, Submit } from \"./styles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Main(){\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        jobname: '',\r\n        jobcity: ''\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Faça sua requisição à API aqui, utilizando formData\r\n        \r\n        // Exemplo de requisição fetch\r\n        try {\r\n            const response = await fetch('sua/url/da/api', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            if (response.ok) {\r\n                // Se a requisição for bem-sucedida, redirecione para a rota Result\r\n                navigate('/jobs');\r\n            } else {\r\n                // Trate os erros de requisição, se necessário\r\n                console.error('Erro ao enviar formulário');\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro ao enviar formulário:', error);\r\n        }\r\n    };\r\n\r\n\r\n    return(\r\n        <Container>\r\n            <form method=\"POST\" on>\r\n                <Input \r\n                    type=\"text\" \r\n                    name=\"jobname\" \r\n                    id=\"jobname\"\r\n                    value={formData.jobname}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Digite o Cargo ou Empresa\" />\r\n                    \r\n                <Input \r\n                    type=\"text\" \r\n                    name=\"jobcity\" \r\n                    id=\"jobcity\"\r\n                    placeholder=\"Insira a Cidade\"\r\n                    value={formData.jobcity}\r\n                    onChange={handleChange} />\r\n\r\n                <Submit type=\"submit\" value=\"Enviar\" />\r\n            </form>\r\n        </Container>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,KAAK,EAAEC,MAAM,QAAQ,UAAU;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACrCY,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC;;IAElB;;IAEA;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,EAAE;QAC3CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,QAAQ;MACjC,CAAC,CAAC;MAEF,IAAIW,QAAQ,CAACO,EAAE,EAAE;QACb;QACAnB,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,MAAM;QACH;QACAoB,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAGD,oBACIxB,OAAA,CAACL,SAAS;IAAA8B,QAAA,eACNzB,OAAA;MAAMiB,MAAM,EAAC,MAAM;MAACS,EAAE;MAAAD,QAAA,gBAClBzB,OAAA,CAACJ,KAAK;QACF+B,IAAI,EAAC,MAAM;QACXjB,IAAI,EAAC,SAAS;QACdkB,EAAE,EAAC,SAAS;QACZjB,KAAK,EAAEP,QAAQ,CAACE,OAAQ;QACxBuB,QAAQ,EAAErB,YAAa;QACvBsB,WAAW,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE9ClC,OAAA,CAACJ,KAAK;QACF+B,IAAI,EAAC,MAAM;QACXjB,IAAI,EAAC,SAAS;QACdkB,EAAE,EAAC,SAAS;QACZE,WAAW,EAAC,iBAAiB;QAC7BnB,KAAK,EAAEP,QAAQ,CAACG,OAAQ;QACxBsB,QAAQ,EAAErB;MAAa;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE9BlC,OAAA,CAACH,MAAM;QAAC8B,IAAI,EAAC,QAAQ;QAAChB,KAAK,EAAC;MAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEpB;AAAChC,EAAA,CA/DuBD,IAAI;EAAA,QACPH,WAAW;AAAA;AAAAqC,EAAA,GADRlC,IAAI;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}